name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.16
        options: --privileged

    steps:
      # 1️⃣ Checkout repo
      - uses: actions/checkout@v4

      # 2️⃣ Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          docker compose -v
      # 3️⃣ Build all Docker images
      - name: Build Docker Compose services
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml build

      # 4️⃣ Run backend tests inside container
      - name: Run backend tests
        run: |
          # 1. Start DB in detached mode
            docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d db

          # 2. Wait for DB to be ready
          until docker compose exec db pg_isready -U user; do sleep 1; done

          # 3. Run backend tests in a new container that **exits after tests**
          docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm backend \
          dotnet test /src/backend.Tests/backend.Tests.csproj --no-build -c Release

          # 4. Tear down
          docker compose -f docker-compose.yml -f docker-compose.ci.yml down

              
      # 5️⃣ Optional: Lint Dockerfiles
      - name: Lint Dockerfiles
        run: |
          docker run --rm -i hadolint/hadolint < backend/Dockerfile || true
          docker run --rm -i hadolint/hadolint < frontend/Dockerfile || true