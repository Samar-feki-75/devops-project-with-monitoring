name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}   # üëà All steps now run from repo root

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Verify Docker versions
      - name: Check Docker versions
        run: |
          docker --version
          docker compose version

      # 3Ô∏è‚É£ Build services
      - name: Build Docker Compose services
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml build

      # 4Ô∏è‚É£ Run backend tests
      - name: Run backend tests
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm backend dotnet test /src/backend.Tests/backend.Tests.csproj --no-build -c Release

      # 5Ô∏è‚É£ Run frontend build
      - name: Run frontend build
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm frontend npm ci
          docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm frontend npm run build

      # 6Ô∏è‚É£ Optional: Lint Dockerfiles
      - name: Lint Dockerfiles
        run: |
          docker run --rm -i hadolint/hadolint < backend/Dockerfile || true
          docker run --rm -i hadolint/hadolint < frontend/Dockerfile || true

      # 7Ô∏è‚É£ (Optional) Clean up containers, networks, and volumes
      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down -v
